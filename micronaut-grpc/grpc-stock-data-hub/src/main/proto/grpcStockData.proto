syntax = "proto3";
import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";

option java_multiple_files = true;
option java_package = "pl.jcw.example.grpc";
option java_outer_classname = "GrpcStockData";

package pl.jcw.example.grpc;

service StockDataService {
  rpc subscribe(stream SymbolDataRequest) returns (stream SymbolData) {}
  rpc publish(stream SymbolData) returns (google.protobuf.Empty) {}
  rpc getAllSymbols(google.protobuf.Empty) returns (stream CompanyDetails) {}
  rpc getAllData(google.protobuf.Empty) returns (stream SymbolData) {}
}

service PerformanceTestingSinkService {
  rpc publishMeasureThroughput(stream SymbolData) returns (ThroughputTestResult) {}
}

service PerformanceTestingTriggerService {
  rpc triggerPerformanceTest(ThroughPutTestTrigger) returns (ThroughputTestResult) {}
}

message SymbolDataRequest {
  string symbolId = 1;
  repeated DataType types = 2;

  enum DataType {
    ALL = 0;
    QUOTATION = 1;
    NEWS = 2;
    DETAILS = 3;
  }
}

/**
Container for any symbol data,
can transfer one data item at once
 */
message SymbolData {
  string symbol_id = 1;
  google.protobuf.Timestamp timestamp = 2;
  oneof data {
    Quotation quotation = 3;
    News news = 4;
    CompanyDetails details = 5;
  }

}

message Quotation {
  double bid = 1;
  double ask = 2;
}

message News {
  string message = 1;
  string source = 2;
  NewsCategory category = 3;

  enum NewsCategory {
    NEUTRAL = 0;
    POSITIVE = 1;
    NEGATIVE = 2;
  }
}

/**
details about company
 */
message CompanyDetails {
  string symbol_id = 1;
  string name = 2;
  string industry = 3;
  string web_page = 4;
  string head_office = 5;
}

message ThroughPutTestTrigger{
  uint32 numberOfMessages = 1;
}

message ThroughputTestResult{
  uint32 messagesCount = 1;
  uint64 totalTimeMillis = 2;
  double msgPerSecond = 3;
}
