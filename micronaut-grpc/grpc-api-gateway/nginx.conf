events{}

http {

    log_format upstream_time '"$time_local" client=$remote_addr '
                   'method=$request_method request="$request" '
                   'request_length=$request_length '
                   'status=$status bytes_sent=$bytes_sent '
                   'body_bytes_sent=$body_bytes_sent '
                   'referer="$http_referer" '
                   'user_agent="$http_user_agent" '
                   'upstream_addr=$upstream_addr '
                   'upstream_status=$upstream_status '
                   'request_time=$request_time '
                   'upstream_response_time=$upstream_response_time '
                   'upstream_connect_time=$upstream_connect_time '
                   'upstream_header_time=$upstream_header_time';

    server {
        listen 80 http2;
        server_name localhost;

        client_max_body_size 100M;

        # use internal docker resolver
        resolver 127.0.0.11;

        access_log /dev/stdout upstream_time;

        proxy_set_header Host            $host;
        proxy_set_header X-Forwarded-For $remote_addr;
        proxy_set_header X-Forwarded-Proto https;

        # STOCK_DATA_HUB_ADDRESS is substituted by entrypoint.sh to env variable value
        set $stockDataHubAddress ${STOCK_DATA_HUB_ADDRESS};

        location /pl.jcw.example.grpc.PerformanceTestingSinkService {
            grpc_pass grpc://$stockDataHubAddress;
        }

        location /pl.jcw.example.grpc.StockDataService {
            grpc_pass grpc://$stockDataHubAddress;
        }

        resolver_timeout 5s;
    }
}
